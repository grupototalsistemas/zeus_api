generator client {
  provider = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

generator nestjsDto {
  provider = "prisma-generator-nestjs-dto"
  output   = "../src/common/dto" // onde ele vai gerar os DTOs
  outputToNestJsResourceStructure = "false"
  exportRelationModifierClasses   = "true"
  reExport                        = "false"
  createDtoPrefix                 = "Create"
  updateDtoPrefix                 = "Update"
  dtoSuffix                       = "Dto"
  entityPrefix                    = ""
  entitySuffix                    = ""
  fileNamingStyle                 = "camel"

}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["global"]
}

model Modulos {
  id              BigInt      @id @default(autoincrement()) @map("id_modulo")
  id_parent       BigInt      @default(-1)
  name_form_page  String      @db.VarChar(100)
  component_index String      @db.VarChar(100) @map("component_indx")
  component_name  String      @db.VarChar(100)
  component_text  String      @db.VarChar(100)
  component_event String?     @db.VarChar(100)
  shortcutkeys    String?     @db.VarChar(100)
  status_visible  Int?        @default(1)
  situacao        Int         @default(1)
  motivo          String?     @db.VarChar(500)
  createdAt       DateTime    @default(now()) @map("created_at")
  updatedAt       DateTime?   @map("updated_at")

  // Relacionamentos
  perfisPermissoes ModulosPerfisPermissoes[]
  sistemasModulos  SistemasModulos[]
  logSystem        LogSystem[]

  @@map("modulos")
  @@schema("global")
}

model ModulosPerfisPermissoes {
  id            BigInt   @id @default(autoincrement()) @map("id_modulo_perfil_permissao")
  id_modulo     BigInt
  id_pessoa_juridica_perfil BigInt
  action_insert Int?     @default(1)
  action_update Int?     @default(1)
  action_search Int?     @default(1)
  action_delete Int?     @default(1)
  action_print  Int?     @default(1)
  situacao      Int      @default(1)
  motivo        String?  @db.VarChar(500)
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime? @map("updated_at")

  // Relacionamentos
  modulo Modulos       @relation(fields: [id_modulo], references: [id])
  perfil PessoasJuridicasPerfis @relation(fields: [id_pessoa_juridica_perfil], references: [id])


  @@map("modulos_perfis_permissoes")
  @@schema("global")
  PessoasJuridicasSistemas PessoasJuridicasSistemas[]
}

model Pessoas {
  id                      BigInt   @id @default(autoincrement()) @map("id_pessoa")
  id_pessoa_tipo          BigInt
  id_pessoa_origem        BigInt
  pessoa                  Int
  codigo                  String?  @db.VarChar(20)
  situacao                Int      @default(1)
  motivo                  String?  @db.VarChar(500)
  createdAt               DateTime @default(now()) @map("created_at")
  updatedAt               DateTime? @map("updated_at")

  // Relacionamentos
  pessoaTipo              PessoasTipo      @relation(fields: [id_pessoa_tipo], references: [id])
  pessoaOrigem            PessoasOrigens   @relation(fields: [id_pessoa_origem], references: [id])
  pessoaFisica            PessoasFisica?
  pessoaJuridica          PessoasJuridicas[]
  pessoasContatos         PessoasContatos[]
  pessoasContatosTipo     PessoasContatosTipo[]
  pessoasDadosAdicionais  PessoasDadosAdicionais[]
  pessoasDadosAdicionaisTipo PessoasDadosAdicionaisTipo[]
  pessoasEnderecos        PessoasEnderecos[]
  pessoasEnderecosTipo    PessoasEnderecosTipo[]

  @@map("pessoas")
  @@schema("global")
}

model PessoasContatos {
  id                       BigInt   @id @default(autoincrement()) @map("id_pessoa_contato")
  id_pessoa_contato_tipo   BigInt
  id_pessoa                BigInt
  descricao                String   @db.VarChar(50)
  situacao                 Int      @default(1)
  motivo                   String?  @db.VarChar(500)
  createdAt                DateTime @default(now()) @map("created_at")
  updatedAt                DateTime? @map("updated_at")

  // Relacionamentos
  pessoa       Pessoas             @relation(fields: [id_pessoa], references: [id])
  contatoTipo  PessoasContatosTipo @relation(fields: [id_pessoa_contato_tipo], references: [id])

  @@map("pessoas_contatos")
  @@schema("global")
}

model PessoasContatosTipo {
  id              BigInt   @id @default(autoincrement()) @map("id_pessoa_contato_tipo")
  id_pessoa       BigInt
  descricao       String   @db.VarChar(50)
  situacao        Int      @default(1)
  motivo          String?  @db.VarChar(500)
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime? @map("updated_at")

  // Relacionamentos
  pessoa          Pessoas            @relation(fields: [id_pessoa], references: [id])
  pessoasContatos PessoasContatos[]

  @@map("pessoas_contatos_tipos")
  @@schema("global")
}

model PessoasDadosAdicionais {
  id                             BigInt   @id @default(autoincrement()) @map("id_pessoa_dado_adicional")
  id_pessoa_dado_adicional_tipo  BigInt
  id_pessoa                      BigInt
  descricao                      String   @db.VarChar(50)
  situacao                       Int      @default(1)
  motivo                         String?  @db.VarChar(500)
  createdAt                      DateTime @default(now()) @map("created_at")
  updatedAt                      DateTime? @map("updated_at")

  // Relacionamentos
  pessoa            Pessoas                     @relation(fields: [id_pessoa], references: [id])
  dadoAdicionalTipo PessoasDadosAdicionaisTipo  @relation(fields: [id_pessoa_dado_adicional_tipo], references: [id])

  @@map("pessoas_dados_adicionais")
  @@schema("global")
}

model PessoasDadosAdicionaisTipo {
  id                BigInt   @id @default(autoincrement()) @map("id_pessoa_dado_adicional_tipo")
  id_pessoa         BigInt
  descricao         String   @db.VarChar(50)
  situacao          Int      @default(1)
  motivo            String?  @db.VarChar(500)
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime? @map("updated_at")

  // Relacionamentos
  pessoa                 Pessoas                    @relation(fields: [id_pessoa], references: [id])
  pessoasDadosAdicionais PessoasDadosAdicionais[]

  @@map("pessoas_dado_adicionais_tipos")
  @@schema("global")
}

model PessoasEnderecos {
  id                        BigInt   @id @default(autoincrement()) @map("id_pessoa_endereco")
  id_pessoa                 BigInt
  id_pessoa_endereco_tipo   BigInt
  logradouro                String
  endereco                  String   @db.VarChar(150)
  numero                    String?  @db.VarChar(50)
  complemento               String?  @db.VarChar(50)
  bairro                    String   @db.VarChar(100)
  municipio                 String   @db.VarChar(100)
  municipio_ibge            String?  @db.VarChar(50)
  estado                    String   @db.VarChar(2)
  cep                       String   @db.VarChar(10)
  situacao                  Int      @default(1)
  motivo                    String?  @db.VarChar(500)
  createdAt                 DateTime @default(now()) @map("created_at")
  updatedAt                 DateTime? @map("updated_at")

  // Relacionamentos
  pessoa       Pessoas              @relation(fields: [id_pessoa], references: [id])
  enderecoTipo PessoasEnderecosTipo @relation(fields: [id_pessoa_endereco_tipo], references: [id])

  @@map("pessoas_enderecos")
  @@schema("global")
}

model PessoasEnderecosTipo {
  id               BigInt   @id @default(autoincrement()) @map("id_pessoa_endereco_tipo")
  id_pessoa        BigInt
  descricao        String   @db.VarChar(50)
  situacao         Int      @default(1)
  motivo           String?  @db.VarChar(500)
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime? @map("updated_at")

  // Relacionamentos
  pessoa           Pessoas            @relation(fields: [id_pessoa], references: [id])
  pessoasEnderecos PessoasEnderecos[]

  @@map("pessoas_enderecos_tipos")
  @@schema("global")
}

model PessoasFisica {
  id                  BigInt   @id @default(autoincrement()) @map("id_pessoa_fisica")
  id_pessoa           BigInt   @unique
  id_pessoa_genero    BigInt
  id_pessoa_estado_civil BigInt
  cpf_justificativa   Int
  cpf                 String?  @db.VarChar(50)
  nome_registro       String   @db.VarChar(150)
  nome_social         String?  @db.VarChar(150)
  doc_numero          String?  @db.VarChar(50)
  doc_emissor         String?  @db.VarChar(50)
  doc_data_emissao    DateTime?
  nacionalidade       String?  @db.VarChar(30)
  naturalidade        String?  @db.VarChar(30)
  data_nascimento     DateTime?
  situacao            Int      @default(1)
  motivo              String?  @db.VarChar(500)
  createdAt           DateTime @default(now()) @map("created_at")
  updatedAt           DateTime? @map("updated_at")

  // Relacionamentos
  pessoa          Pessoas                    @relation(fields: [id_pessoa], references: [id])
  genero          PessoasFisicasGenero       @relation(fields: [id_pessoa_genero], references: [id])
  estadoCivil     PessoasFisicasEstadoCivil  @relation(fields: [id_pessoa_estado_civil], references: [id])
  pessoasUsuarios PessoasUsuarios[]

  @@map("pessoas_fisicas")
  @@schema("global")
  PessoasJuridicas PessoasJuridicas[]
  PessoasJuridicasFisicas PessoasJuridicasFisicas[]
}

model PessoasFisicasEstadoCivil {
  id            BigInt   @id @default(autoincrement()) @map("id_pessoa_fisica_estado_civil")
  descricao     String?  @db.VarChar(50)
  situacao      Int      @default(1)
  motivo        String?  @db.VarChar(500)
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime? @map("updated_at")

  // Relacionamentos
  pessoasFisicas PessoasFisica[]

  @@map("pessoas_fisicas_estados_civis")
  @@schema("global")
}

model PessoasFisicasGenero {
  id            BigInt   @id @default(autoincrement()) @map("id_pessoa_fisica_genero")
  genero        String?  @db.VarChar(100)
  descricao     String?  @db.VarChar(100)
  situacao      Int      @default(1)
  motivo        String?  @db.VarChar(500)
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime? @map("updated_at")

  // Relacionamentos
  pessoasFisicas PessoasFisica[]

  @@map("pessoas_fisicas_generos")
  @@schema("global")
}

model PessoasJuridicas {
  id                   BigInt   @id @default(autoincrement()) @map("id_pessoa_juridica")
  id_pessoa            BigInt
  id_pessoa_responsavel BigInt
  id_pessoa_fisica     BigInt
  cnpj                 String   @db.VarChar(50)
  razao_social         String   @db.VarChar(150)
  nome_fantasia        String?  @db.VarChar(150)
  inscricao_estadual   String?  @db.VarChar(50) @map("insc_estadual")
  inscricao_municipal  String?  @db.VarChar(50) @map("insc_municipal")
  filial_principal     Int?     @default(0)
  situacao             Int      @default(1)
  motivo               String?  @db.VarChar(500)
  createdAt            DateTime @default(now()) @map("created_at")
  updatedAt            DateTime? @map("updated_at")

  // Relacionamentos
  pessoa        Pessoas         @relation(fields: [id_pessoa], references: [id])
  sistemas      Sistemas[]
  
  
  pessoaFisica      PessoasFisica @relation(fields: [id_pessoa_fisica], references: [id])
  pessoasJuridicasFisicas PessoasJuridicasFisicas[]

  @@map("pessoas_juridicas")
  @@schema("global")
  PessoasJuridicasJuridicas PessoasJuridicasJuridicas[]
  PessoasJuridicasSistemas PessoasJuridicasSistemas[]
  PessoasJuridicasPerfis PessoasJuridicasPerfis[]
}

model PessoasJuridicasFisicas {
  id                   BigInt   @id @default(autoincrement()) @map("id_pessoa_juridica_fisica")
  id_pessoa_juridica            BigInt
  id_pessoa_fisica BigInt
  id_pessoa_juridica_perfil     BigInt
  situacao             Int      @default(1)
  motivo               String?  @db.VarChar(500)
  createdAt            DateTime @default(now()) @map("created_at")
  updatedAt            DateTime? @map("updated_at")

  // Relacionamentos
  pessoaJuridica   PessoasJuridicas   @relation(fields: [id_pessoa_juridica], references: [id])
  pessoaFisica     PessoasFisica      @relation(fields: [id_pessoa_fisica], references: [id])
  pessoaJuridicaPerfil PessoasJuridicasPerfis @relation(fields: [id_pessoa_juridica_perfil], references: [id])

  @@map("pessoas_juridicas_fisicas")
  @@schema("global")
  PessoasJuridicasJuridicas PessoasJuridicasJuridicas[]
  PessoasJuridicasSistemas PessoasJuridicasSistemas[]
}

model PessoasJuridicasJuridicas {
  id            BigInt   @id @default(autoincrement()) @map("id_pessoa_juridica_juridica")
  id_pessoa_juridica_empresa        BigInt
  descricao     String   @db.VarChar(100)
  situacao      Int      @default(1)
  motivo        String?  @db.VarChar(500)
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime? @map("updated_at")

  // Relacionamentos
  pessoasJuridicasFisicas PessoasJuridicasFisicas[]
  pessoaJuridicaEmpresa   PessoasJuridicas @relation(fields: [id_pessoa_juridica_empresa], references: [id])

  @@map("pessoas_juridicas_juridicas")
  @@schema("global")
}

model PessoasJuridicasPerfis {
  id            BigInt   @id @default(autoincrement()) @map("id_pessoa_juridica_perfil")
  id_pessoa_juridica        BigInt
  descricao     String   @db.VarChar(100)
  status_view  Int?     @default(1)
  situacao      Int      @default(1)
  motivo        String?  @db.VarChar(500)
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime? @map("updated_at")

  // Relacionamentos
  pessoasJuridicasFisicas PessoasJuridicasFisicas[]
  perfisPermissoes         ModulosPerfisPermissoes[]
  pessoaJuridica          PessoasJuridicas @relation(fields: [id_pessoa_juridica], references: [id])

  @@map("pessoas_juridicas_perfis")
  @@schema("global")
  LogSystem LogSystem[]
}

model PessoasJuridicasSistemas {
  id            BigInt   @id @default(autoincrement()) @map("id_pessoa_juridica_sistema")
  id_pessoa_juridica        BigInt
  id_sistema     BigInt
  situacao      Int      @default(1)
  motivo        String?  @db.VarChar(500)
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime? @map("updated_at")

  // Relacionamentos
  pessoasJuridicasFisicas PessoasJuridicasFisicas[]
  perfisPermissoes         ModulosPerfisPermissoes[]
  pessoaJuridica          PessoasJuridicas @relation(fields: [id_pessoa_juridica], references: [id])

  @@map("pessoas_juridicas_sistemas")
  @@schema("global")
}
model PessoasOrigens {
  id        BigInt    @id @default(autoincrement()) @map("id_pessoa_origem")
  descricao String    @db.VarChar(50)
  situacao  Int       @default(1)
  motivo    String?   @db.VarChar(500)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")

  // Relacionamentos
  pessoas Pessoas[]

  @@map("pessoas_origens")
  @@schema("global")
}

model PessoasTipo {
  id        BigInt    @id @default(autoincrement()) @map("id_pessoa_tipo")
  descricao String    @db.VarChar(50)
  situacao  Int       @default(1)
  motivo    String?   @db.VarChar(500)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")

  // Relacionamentos
  pessoas Pessoas[]

  @@map("pessoas_tipos")
  @@schema("global")
}

model PessoasUsuarios {
  id              BigInt   @id @default(autoincrement()) @map("id_pessoa_usuario")
  id_pessoa_fisica BigInt
  nome_login      String   @db.VarChar(20)
  login           String   @db.VarChar(50)
  senha           String   @db.VarChar(20)
  senha_master    String   @db.VarChar(20)
  first_access    Int      @default(1)
  situacao        Int      @default(1)
  motivo          String?  @db.VarChar(500)
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime? @map("updated_at")

  // Relacionamentos
  pessoaFisica PessoasFisica @relation(fields: [id_pessoa_fisica], references: [id])
  logSystem    LogSystem[]

  @@map("pessoas_usuarios")
  @@schema("global")
}

model Sistemas {
  id                     BigInt   @id @default(autoincrement()) @map("id_sistema")
  id_pessoa_juridica_base BigInt
  sistema                String   @db.VarChar(20)
  descricao              String   @db.VarChar(100)
  status_web             Int      @default(1)
  situacao               Int      @default(1)
  motivo                 String?  @db.VarChar(500)
  createdAt              DateTime @default(now()) @map("created_at")
  updatedAt              DateTime? @map("updated_at")

  // Relacionamentos
  pessoaJuridicaBase PessoasJuridicas @relation(fields: [id_pessoa_juridica_base], references: [id])
  sistemasModulos    SistemasModulos[]

  @@map("sistemas")
  @@schema("global")
}

model SistemasModulos {
  id                  BigInt   @id @default(autoincrement()) @map("id_sistema_modulo")
  id_sistema          BigInt
  id_modulo_principal BigInt   @map("id_modulo_primcipal")
  situacao            Int      @default(1)
  motivo              String?  @db.VarChar(500)
  createdAt           DateTime @default(now()) @map("created_at")
  updatedAt           DateTime? @map("updated_at")

  // Relacionamentos
  sistema         Sistemas @relation(fields: [id_sistema], references: [id])
  moduloPrincipal Modulos  @relation(fields: [id_modulo_principal], references: [id])

  @@map("sistemas_modulos")
  @@schema("global")
}

model LogSystem {
  id                 BigInt   @id @default(autoincrement()) @map("id_log_system")
  id_usuario         BigInt
  id_perfil          BigInt
  id_modulo          BigInt
  endpoint_name      String   @db.VarChar(50)
  device             String   @db.VarChar(50)
  user_win           String?  @db.VarChar(50)
  computer_name      String?  @db.VarChar(50)
  action_page        String   @db.VarChar(50)
  table_name         String?  @db.VarChar(50)
  table_id_name      String?  @db.VarChar(50)
  table_id_value     BigInt?
  table_id_value_str String?  @db.VarChar(10)
  table_data_before  Json?
  table_data_after   Json?
  error_status       Int?     @default(0)
  error_message      String?  @db.VarChar(500) @map("error_menssage")
  createdAt          DateTime @default(now()) @map("created_at")
  updatedAt          DateTime? @map("updated_at")

  // Relacionamentos
  usuario PessoasUsuarios @relation(fields: [id_usuario], references: [id])
  modulo  Modulos         @relation(fields: [id_modulo], references: [id])
  perfil  PessoasJuridicasPerfis @relation(fields: [id_perfil], references: [id])

  @@map("log_system")
  @@schema("global")
}